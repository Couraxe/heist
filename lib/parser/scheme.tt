module Heist
  grammar Scheme
    rule program
      cell* <Program>
    end
    
    rule cell
      ignore quote cell <QuotedCell> /
      ignore (list / atom) ignore <Cell>
    end
    
    rule quote
      "'" / "`" / ",@" / ","
    end
    
    rule dot
      "."
    end
    
    rule list
      ("(" cells ")" / "[" cells "]") <List>
    end
    
    rule cells
      cell+ (dot space cell) /
      cell* ignore
    end
    
    rule atom
      datum / identifier
    end
    
    rule datum
      (boolean / number / string) !(!delimiter .) <Datum>
    end
    
    rule boolean
      ("#t" / "#f") <Boolean>
    end
    
    rule number
      complex / real / rational / integer
    end
    
    rule complex
      real "+" real "i" <Complex>
    end
    
    rule real
      integer ("." digit+) <Real>
    end
    
    rule rational
      numerator:integer "/" denominator:integer <Rational>
    end
    
    rule integer
      "-"? ("0" / [1-9] digit*) <Integer>
    end
    
    rule string
      '"' ('\\"' / [^"])* '"' <String>
    end
    
    rule identifier
      ((!delimiter .) (!delimiter .)+ / (!reserved .)) <Identifier>
    end
    
    rule digit
      [0-9]
    end
    
    rule reserved
      dot / delimiter
    end
    
    rule delimiter
      quote / paren / space
    end
    
    rule paren
      [\(\)\[\]]
    end
    
    rule space
      [\s\n\r\t]
    end
    
    rule ignore
      space* comment?
    end
    
    rule comment
      ";" (![\n\r] .)* ignore
    end
  end
end

